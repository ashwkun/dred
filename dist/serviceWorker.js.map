{"mappings":"AAAA,MAAM,aAAa;AACnB,MAAM,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,KAAK,gBAAgB,CAAC,WAAW,CAAA;IAC/B,MAAM,SAAS,CACb,OAAO,IAAI,CAAC,YACT,IAAI,CAAC,CAAA,QAAS,MAAM,MAAM,CAAC,cAC3B,IAAI,CAAC,IAAM,KAAK,WAAW;AAElC;AAEA,KAAK,gBAAgB,CAAC,YAAY,CAAA;IAChC,MAAM,SAAS,CACb,QAAQ,GAAG,CAAC;QACV,KAAK,OAAO,CAAC,KAAK;QAClB,OAAO,IAAI,GAAG,IAAI,CAAC,CAAA;YACjB,OAAO,QAAQ,GAAG,CAChB,WACG,MAAM,CAAC,CAAA,YAAa,cAAc,YAClC,GAAG,CAAC,CAAA,YAAa,OAAO,MAAM,CAAC;QAEtC;KACD;AAEL;AAEA,KAAK,gBAAgB,CAAC,SAAS,CAAA;IAC7B,6BAA6B;IAC7B,IAAI,MAAM,OAAO,CAAC,IAAI,KAAK,YAAY;QACrC,MAAM,WAAW,CACf,MAAM,MAAM,OAAO,EAChB,KAAK,CAAC;YACL,OAAO,OAAO,KAAK,CAAC;QACtB;QAEJ;IACF;IAEA,wBAAwB;IACxB,MAAM,WAAW,CACf,OAAO,KAAK,CAAC,MAAM,OAAO,EACvB,IAAI,CAAC,CAAA;QACJ,IAAI,UACF,OAAO;QAGT,OAAO,MAAM,MAAM,OAAO,EACvB,IAAI,CAAC,CAAA;YACJ,sCAAsC;YACtC,IAAI,CAAC,YAAY,SAAS,MAAM,KAAK,OAAO,SAAS,IAAI,KAAK,SAC5D,OAAO;YAGT,MAAM,kBAAkB,SAAS,KAAK;YACtC,OAAO,IAAI,CAAC,YACT,IAAI,CAAC,CAAA;gBACJ,MAAM,GAAG,CAAC,MAAM,OAAO,EAAE;YAC3B;YAEF,OAAO;QACT,GACC,KAAK,CAAC;YACL,8CAA8C;YAC9C,IAAI,MAAM,OAAO,CAAC,IAAI,KAAK,YACzB,OAAO,OAAO,KAAK,CAAC;QAExB;IACJ;AAEN","sources":["public/serviceWorker.js"],"sourcesContent":["const CACHE_NAME = 'dred-v1';\nconst urlsToCache = [\n  './',\n  './index.html',\n  './manifest.webmanifest',\n  './icons/icon-192.png',\n  './icons/icon-512.png',\n  './logo.png',\n  './offline.html'\n];\n\nself.addEventListener('install', event => {\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then(cache => cache.addAll(urlsToCache))\n      .then(() => self.skipWaiting())\n  );\n});\n\nself.addEventListener('activate', event => {\n  event.waitUntil(\n    Promise.all([\n      self.clients.claim(),\n      caches.keys().then(cacheNames => {\n        return Promise.all(\n          cacheNames\n            .filter(cacheName => cacheName !== CACHE_NAME)\n            .map(cacheName => caches.delete(cacheName))\n        );\n      })\n    ])\n  );\n});\n\nself.addEventListener('fetch', event => {\n  // Handle navigation requests\n  if (event.request.mode === 'navigate') {\n    event.respondWith(\n      fetch(event.request)\n        .catch(() => {\n          return caches.match('./offline.html');\n        })\n    );\n    return;\n  }\n\n  // Handle other requests\n  event.respondWith(\n    caches.match(event.request)\n      .then(response => {\n        if (response) {\n          return response;\n        }\n\n        return fetch(event.request)\n          .then(response => {\n            // Don't cache if not a valid response\n            if (!response || response.status !== 200 || response.type !== 'basic') {\n              return response;\n            }\n\n            const responseToCache = response.clone();\n            caches.open(CACHE_NAME)\n              .then(cache => {\n                cache.put(event.request, responseToCache);\n              });\n\n            return response;\n          })\n          .catch(() => {\n            // Return offline page for navigation requests\n            if (event.request.mode === 'navigate') {\n              return caches.match('./offline.html');\n            }\n          });\n      })\n  );\n}); "],"names":[],"version":3,"file":"serviceWorker.js.map","sourceRoot":"/__parcel_source_root/"}